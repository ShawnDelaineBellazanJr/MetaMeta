using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace MetaMeta.Orchestration.Models;

/// <summary>
/// Represents a structured execution plan generated by a planner agent.
/// </summary>
public class PlanResponse
{
    /// <summary>
    /// Gets or sets the goal that the plan aims to achieve.
    /// </summary>
    [JsonPropertyName("goal")]
    public string Goal { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets the execution strategy selected for this plan.
    /// </summary>
    [JsonPropertyName("strategy")]
    public string Strategy { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets the collection of steps that make up the execution plan.
    /// </summary>
    [JsonPropertyName("steps")]
    public List<PlanStep> Steps { get; set; } = new List<PlanStep>();
}

/// <summary>
/// Represents an individual step within an execution plan.
/// </summary>
public class ExecutionStep
{
    /// <summary>
    /// Gets or sets the unique identifier for the step.
    /// </summary>
    [JsonPropertyName("id")]
    public int Id { get; set; }

    /// <summary>
    /// Gets or sets the description of what the step involves.
    /// </summary>
    [JsonPropertyName("description")]
    public string Description { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets what the step is expected to produce as output.
    /// </summary>
    [JsonPropertyName("expectedOutput")]
    public string ExpectedOutput { get; set; } = string.Empty;

    /// <summary>
    /// Gets or sets the IDs of steps that this step depends on.
    /// </summary>
    [JsonPropertyName("dependencies")]
    public List<int> Dependencies { get; set; } = new List<int>();

    /// <summary>
    /// Gets or sets the name of the agent that executed this step, if applicable.
    /// </summary>
    [JsonIgnore]
    public string? ExecutedBy { get; set; }

    /// <summary>
    /// Gets or sets the result produced by executing this step.
    /// </summary>
    [JsonIgnore]
    public string? Result { get; set; }

    /// <summary>
    /// Gets or sets whether this step has been executed.
    /// </summary>
    [JsonIgnore]
    public bool IsExecuted { get; set; } = false;
} 